name: SpringBoot CI/CD to Raspberry Pi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  DOCKER_IMAGE_NAME: springboot-pi-app

jobs:
  # Build and Test Job
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Run tests
        run: ./mvnw test
        
      - name: Generate test coverage
        run: ./mvnw jacoco:report

  # Build Docker Image Job
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: Build application
        run: ./mvnw clean package -DskipTests
        
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
          docker save ${{ env.DOCKER_IMAGE_NAME }}:latest > springboot-app.tar
          
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: springboot-app.tar
          retention-days: 1

  # Deploy to Raspberry Pi Job  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          
      - name: Copy Docker image to Pi
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.PI_SSH_KEY }}
          source: "springboot-app.tar"
          target: "/home/pi/deployments/"
          
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.PI_SSH_KEY }}
          script: |
            cd /home/pi/deployments/
            
            # Load the new Docker image
            docker load < springboot-app.tar
            
            # Stop and remove existing container
            docker stop springboot-app || true
            docker rm springboot-app || true
            
            # Run new container
            docker run -d \
              --name springboot-app \
              --restart unless-stopped \
              -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=production \
              ${{ env.DOCKER_IMAGE_NAME }}:latest
              
            # Clean up old images
            docker image prune -f
            
            # Verify deployment
            sleep 10
            curl -f http://localhost:8080/actuator/health || exit 1
            
            echo "Deployment successful! Application is running on http://$(hostname -I | cut -d' ' -f1):8080"
